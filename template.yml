AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    Slack Cognito OpenID Wrapper (SSO)

# More info about Globals: https://slack.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: nodejs10.x
    Timeout: 15
    Environment:
      Variables:
        SLACK_CLIENT_ID:
          Ref: SlackClientIdParameter
        SLACK_CLIENT_SECRET:
          Ref: SlackClientSecretParameter
        COGNITO_REDIRECT_URI:
          Ref: CognitoRedirectUriParameter
        GITHUB_API_URL:
          Ref: SlackUrlParameter
        GITHUB_LOGIN_URL:
          Ref: SlackLoginUrlParameter

Parameters:
  SlackClientIdParameter:
    Type: String
  SlackClientSecretParameter:
    Type: String
  CognitoRedirectUriParameter:
    Type: String
  SlackUrlParameter:
    Type: String
    Default: "https://api.slack.com"
    MinLength: 1
  SlackLoginUrlParameter:
    Type: String
    Default: "https://slack.com"
    MinLength: 1
  StageNameParameter:
    Type: String

Resources:
  SlackOAuthApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageNameParameter
      OpenApiVersion: "2.0"
  OpenIdDiscovery:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist-lambda
      Handler: openIdConfiguration.handler
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /.well-known/openid-configuration
            Method: get
            RestApiId: !Ref SlackOAuthApi
  Authorize:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist-lambda
      Handler: authorize.handler
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /authorize
            Method: get
            RestApiId: !Ref SlackOAuthApi
  Token:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist-lambda
      Handler: token.handler
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /token
            Method: get
            RestApiId: !Ref SlackOAuthApi
        PostResource:
          Type: Api
          Properties:
            Path: /token
            Method: post
            RestApiId: !Ref SlackOAuthApi
  UserInfo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist-lambda
      Handler: userinfo.handler
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /userinfo
            Method: get
            RestApiId: !Ref SlackOAuthApi
        PostResource:
          Type: Api
          Properties:
            Path: /userinfo
            Method: post
            RestApiId: !Ref SlackOAuthApi
  Jwks:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist-lambda
      Handler: jwks.handler
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /.well-known/jwks.json
            Method: get
            RestApiId: !Ref SlackOAuthApi

Outputs:
    SlackShimIssuer:
      Description: "Slack OpenID Shim Issuer"
      Value: !Sub "https://${SlackOAuthApi}.execute-api.${AWS::Region}.amazonaws.com/${StageNameParameter}"
